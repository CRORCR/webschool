Node.js最主要的特点：使用非阻塞、事件驱动I/O模型使其轻量、高效，能够构建数据密集型、实时的跨平台应用

Nodejs优点:
采用事件驱动、异步编程，为网络服务而设计。其实Javascript的匿名函数和闭包特性非常适合事件驱动、异步编程
Node.js非阻塞模式的IO处理给Node.js带来高性能的负载能力，非常适合用作依赖其它IO资源的中间层服务
Node.js可以认为是数据密集型分布式部署环境下的实时应用系统的完美解决方案
Node非常适合如下情况：在响应客户端之前，您预计可能有很高的流量，但所需的服务器端逻辑和处理不一定很多。

缺点:
1、可靠性低
2、单进程，单线程，只支持单核CPU，不能充分的利用多核CPU服务器。一旦这个进程崩掉，那么整个web服务就崩掉了。

目前Node.js的网络服务器有以下几种支持多进程的方式：
#1 开启多个进程，每个进程绑定不同的端口，用反向代理服务器如 Nginx 做负载均衡，
好处是我们可以借助强大的 Nginx 做一些过滤检查之类的操作，同时能够实现比较好的均衡策略，但坏处也是显而易见——我们引入了一个间接层。
#2 多进程绑定在同一个端口侦听。在Node.js中，提供了进程间发送“文件句柄” 的功能，这个功能实在是太有用了
3 一个进程负责监听、接收连接，然后把接收到的连接平均发送到子进程中去处理